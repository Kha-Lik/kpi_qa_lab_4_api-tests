{
	"info": {
		"_postman_id": "a1cc8015-995f-48dc-9de6-4a471b757cdc",
		"name": "restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"required\": [\r",
							"        \"firstname\",\r",
							"        \"lastname\",\r",
							"        \"totalprice\",\r",
							"        \"depositpaid\",\r",
							"        \"bookingdates\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"firstname\": {\r",
							"            \"$id\": \"#/properties/firstname\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"lastname\": {\r",
							"            \"$id\": \"#/properties/lastname\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"totalprice\": {\r",
							"            \"$id\": \"#/properties/totalprice\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"depositpaid\": {\r",
							"            \"$id\": \"#/properties/depositpaid\",\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"bookingdates\": {\r",
							"            \"$id\": \"#/properties/bookingdates\",\r",
							"            \"required\": [\r",
							"                \"checkin\",\r",
							"                \"checkout\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"checkin\": {\r",
							"                    \"$id\": \"#/properties/bookingdates/properties/checkin\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"checkout\": {\r",
							"                    \"$id\": \"#/properties/bookingdates/properties/checkout\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"additionalneeds\": {\r",
							"            \"$id\": \"#/properties/additionalneeds\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    const result = tv4.validateMultiple(pm.response.json(), schema, false, true);\r",
							"\tif (!result.valid) result.errors.forEach(err => console.log(\"Validation Error: \" + err.message));\r",
							"\tpm.expect(result.valid).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is correct\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).contains('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/1",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"bookingid\": 1,\r",
							"            \"booking\": {\r",
							"                \"firstname\": \"Jim\",\r",
							"                \"lastname\": \"Brown\",\r",
							"                \"totalprice\": 111,\r",
							"                \"depositpaid\": true,\r",
							"                \"bookingdates\": {\r",
							"                    \"checkin\": \"2018-01-01\",\r",
							"                    \"checkout\": \"2019-01-01\"\r",
							"                },\r",
							"                \"additionalneeds\": \"Breakfast\"\r",
							"            }\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"bookingid\",\r",
							"        \"booking\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"bookingid\": {\r",
							"            \"$id\": \"#/properties/bookingid\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The bookingid schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ]\r",
							"        },\r",
							"        \"booking\": {\r",
							"            \"$id\": \"#/properties/booking\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The booking schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"firstname\": \"Jim\",\r",
							"                    \"lastname\": \"Brown\",\r",
							"                    \"totalprice\": 111,\r",
							"                    \"depositpaid\": true,\r",
							"                    \"bookingdates\": {\r",
							"                        \"checkin\": \"2018-01-01\",\r",
							"                        \"checkout\": \"2019-01-01\"\r",
							"                    },\r",
							"                    \"additionalneeds\": \"Breakfast\"\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"firstname\",\r",
							"                \"lastname\",\r",
							"                \"totalprice\",\r",
							"                \"depositpaid\",\r",
							"                \"bookingdates\",\r",
							"                \"additionalneeds\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"firstname\": {\r",
							"                    \"$id\": \"#/properties/booking/properties/firstname\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The firstname schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Jim\"\r",
							"                    ]\r",
							"                },\r",
							"                \"lastname\": {\r",
							"                    \"$id\": \"#/properties/booking/properties/lastname\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The lastname schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Brown\"\r",
							"                    ]\r",
							"                },\r",
							"                \"totalprice\": {\r",
							"                    \"$id\": \"#/properties/booking/properties/totalprice\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The totalprice schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        111\r",
							"                    ]\r",
							"                },\r",
							"                \"depositpaid\": {\r",
							"                    \"$id\": \"#/properties/booking/properties/depositpaid\",\r",
							"                    \"type\": \"boolean\",\r",
							"                    \"title\": \"The depositpaid schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": false,\r",
							"                    \"examples\": [\r",
							"                        true\r",
							"                    ]\r",
							"                },\r",
							"                \"bookingdates\": {\r",
							"                    \"$id\": \"#/properties/booking/properties/bookingdates\",\r",
							"                    \"type\": \"object\",\r",
							"                    \"title\": \"The bookingdates schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": {},\r",
							"                    \"examples\": [\r",
							"                        {\r",
							"                            \"checkin\": \"2018-01-01\",\r",
							"                            \"checkout\": \"2019-01-01\"\r",
							"                        }\r",
							"                    ],\r",
							"                    \"required\": [\r",
							"                        \"checkin\",\r",
							"                        \"checkout\"\r",
							"                    ],\r",
							"                    \"properties\": {\r",
							"                        \"checkin\": {\r",
							"                            \"$id\": \"#/properties/booking/properties/bookingdates/properties/checkin\",\r",
							"                            \"type\": \"string\",\r",
							"                            \"title\": \"The checkin schema\",\r",
							"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                            \"default\": \"\",\r",
							"                            \"examples\": [\r",
							"                                \"2018-01-01\"\r",
							"                            ]\r",
							"                        },\r",
							"                        \"checkout\": {\r",
							"                            \"$id\": \"#/properties/booking/properties/bookingdates/properties/checkout\",\r",
							"                            \"type\": \"string\",\r",
							"                            \"title\": \"The checkout schema\",\r",
							"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                            \"default\": \"\",\r",
							"                            \"examples\": [\r",
							"                                \"2019-01-01\"\r",
							"                            ]\r",
							"                        }\r",
							"                    },\r",
							"                    \"additionalProperties\": true\r",
							"                },\r",
							"                \"additionalneeds\": {\r",
							"                    \"$id\": \"#/properties/booking/properties/additionalneeds\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The additionalneeds schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Breakfast\"\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    const result = tv4.validateMultiple(pm.response.json(), schema, false, true);\r",
							"\tif (!result.valid) result.errors.forEach(err => console.log(\"Validation Error: \" + err.message));\r",
							"\tpm.expect(result.valid).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Created booking contains data from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.booking.firstname).to.eql(pm.environment.get(\"firstname\"));\r",
							"    pm.expect(jsonData.booking.lastname).to.eql(pm.environment.get(\"lastname\"));\r",
							"    pm.expect(jsonData.booking.totalprice).to.eql(parseInt(pm.environment.get(\"totalprice\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is correct\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).contains('application/json');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"const lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"const totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
							"\r",
							"pm.environment.set(\"firstname\", firstName);\r",
							"pm.environment.set(\"lastname\", lastName);\r",
							"pm.environment.set(\"totalprice\", totalPrice);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"const lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"const totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
							"\r",
							"pm.environment.set(\"firstname\", firstName);\r",
							"pm.environment.set(\"lastname\", lastName);\r",
							"pm.environment.set(\"totalprice\", totalPrice);\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.collectionVariables.get(\"token_url\"),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'content-type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode : 'raw',\r",
							"        raw: JSON.stringify({ username: \"admin\", password: \"password123\" })\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.collectionVariables.set(\"token\", res.json().token);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"required\": [\r",
							"        \"firstname\",\r",
							"        \"lastname\",\r",
							"        \"totalprice\",\r",
							"        \"depositpaid\",\r",
							"        \"bookingdates\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"firstname\": {\r",
							"            \"$id\": \"#/properties/firstname\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"lastname\": {\r",
							"            \"$id\": \"#/properties/lastname\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"totalprice\": {\r",
							"            \"$id\": \"#/properties/totalprice\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"depositpaid\": {\r",
							"            \"$id\": \"#/properties/depositpaid\",\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"bookingdates\": {\r",
							"            \"$id\": \"#/properties/bookingdates\",\r",
							"            \"required\": [\r",
							"                \"checkin\",\r",
							"                \"checkout\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"checkin\": {\r",
							"                    \"$id\": \"#/properties/bookingdates/properties/checkin\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"checkout\": {\r",
							"                    \"$id\": \"#/properties/bookingdates/properties/checkout\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"additionalneeds\": {\r",
							"            \"$id\": \"#/properties/additionalneeds\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    const result = tv4.validateMultiple(pm.response.json(), schema, false, true);\r",
							"\tif (!result.valid) result.errors.forEach(err => console.log(\"Validation Error: \" + err.message));\r",
							"\tpm.expect(result.valid).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Updated booking contains data from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstname\"));\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastname\"));\r",
							"    pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalprice\")));\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is correct\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).contains('application/json');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/1",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"const lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"const totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
							"\r",
							"pm.environment.set(\"firstname\", firstName);\r",
							"pm.environment.set(\"lastname\", lastName);\r",
							"pm.environment.set(\"totalprice\", totalPrice);\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.collectionVariables.get(\"token_url\"),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'content-type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode : 'raw',\r",
							"        raw: JSON.stringify({ username: \"admin\", password: \"password123\" })\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.collectionVariables.set(\"token\", res.json().token);\r",
							"});\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.collectionVariables.get(\"create_url\"),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'content-type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode : 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            \"firstname\" : firstName,\r",
							"            \"lastname\" : lastName,\r",
							"            \"totalprice\" : totalPrice,\r",
							"            \"depositpaid\" : true,\r",
							"            \"bookingdates\" : {\r",
							"                \"checkin\" : \"2018-01-01\",\r",
							"                \"checkout\" : \"2019-01-01\"\r",
							"            },\r",
							"            \"additionalneeds\" : \"Breakfast\"\r",
							"        })\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    pm.collectionVariables.set(\"bookingId\", res.json().bookingid);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is correct\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).contains('text/plain');\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "firstname",
			"value": "Jim"
		},
		{
			"key": "lastname",
			"value": "Brown"
		},
		{
			"key": "totalprice",
			"value": "100"
		},
		{
			"key": "token",
			"value": "YWRtaW46cGFzc3dvcmQxMjM=]"
		},
		{
			"key": "token_url",
			"value": "https://restful-booker.herokuapp.com/auth"
		},
		{
			"key": "bookingId",
			"value": "1"
		},
		{
			"key": "create_url",
			"value": "https://restful-booker.herokuapp.com/booking"
		}
	]
}